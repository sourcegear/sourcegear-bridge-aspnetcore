// this file is automatically generated with SourceGear Bridge

#include <stdint.h>

#ifndef INCLUDE_Microsoft_Extensions_DependencyInjection
#define INCLUDE_Microsoft_Extensions_DependencyInjection

#ifdef __cplusplus
extern "C" {
#endif

typedef const void* _Nonnull SG_HNDL_NONNULL;
typedef const void* _Nullable SG_HNDL_NULLABLE;
typedef const void* _Nonnull TYP;
typedef uint64_t GVAL;

TYP Microsoft_Extensions_DependencyInjection_DefaultServiceProviderFactory_get_type_handle(void);

SG_HNDL_NONNULL Microsoft_Extensions_DependencyInjection_DefaultServiceProviderFactory_ctor_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown);

SG_HNDL_NONNULL Microsoft_Extensions_DependencyInjection_DefaultServiceProviderFactory_ctor_0__1__ServiceProviderOptions(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NULLABLE options);

SG_HNDL_NULLABLE Microsoft_Extensions_DependencyInjection_DefaultServiceProviderFactory_IServiceCollection__CreateBuilder_0__1__IServiceCollection(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NULLABLE services);

SG_HNDL_NULLABLE Microsoft_Extensions_DependencyInjection_DefaultServiceProviderFactory_IServiceProvider__CreateServiceProvider_0__1__IServiceCollection(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NULLABLE containerBuilder);

SG_HNDL_NONNULL Microsoft_Extensions_DependencyInjection_DefaultServiceProviderFactory_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

SG_HNDL_NULLABLE Microsoft_Extensions_DependencyInjection_ServiceCollectionContainerBuilderExtensions_ServiceProvider__BuildServiceProvider_0__1__IServiceCollection(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NULLABLE services);

SG_HNDL_NULLABLE Microsoft_Extensions_DependencyInjection_ServiceCollectionContainerBuilderExtensions_ServiceProvider__BuildServiceProvider_0__2__IServiceCollection_ServiceProviderOptions(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NULLABLE services, SG_HNDL_NULLABLE options);

SG_HNDL_NULLABLE Microsoft_Extensions_DependencyInjection_ServiceCollectionContainerBuilderExtensions_ServiceProvider__BuildServiceProvider_0__2__IServiceCollection_bool(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NULLABLE services, int32_t validateScopes);

TYP Microsoft_Extensions_DependencyInjection_ServiceProvider_get_type_handle(void);

void Microsoft_Extensions_DependencyInjection_ServiceProvider_void__Dispose_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NONNULL Microsoft_Extensions_DependencyInjection_ServiceProvider_ValueTask__DisposeAsync_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

SG_HNDL_NULLABLE Microsoft_Extensions_DependencyInjection_ServiceProvider_Object__GetService_0__1__Type(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, SG_HNDL_NULLABLE serviceType);

SG_HNDL_NONNULL Microsoft_Extensions_DependencyInjection_ServiceProvider_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);

TYP Microsoft_Extensions_DependencyInjection_ServiceProviderOptions_get_type_handle(void);

SG_HNDL_NONNULL Microsoft_Extensions_DependencyInjection_ServiceProviderOptions_ctor_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown);

int32_t Microsoft_Extensions_DependencyInjection_ServiceProviderOptions_bool__get_ValidateOnBuild_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void Microsoft_Extensions_DependencyInjection_ServiceProviderOptions_void__set_ValidateOnBuild_0__1__bool(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, int32_t value);

int32_t Microsoft_Extensions_DependencyInjection_ServiceProviderOptions_bool__get_ValidateScopes_0__0(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h);

void Microsoft_Extensions_DependencyInjection_ServiceProviderOptions_void__set_ValidateScopes_0__1__bool(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __self_h, int32_t value);

SG_HNDL_NONNULL Microsoft_Extensions_DependencyInjection_ServiceProviderOptions_cast(SG_HNDL_NULLABLE * _Nonnull __thrown, SG_HNDL_NONNULL __h);


#ifdef __cplusplus
}
#endif

#endif // INCLUDE_Microsoft_Extensions_DependencyInjection

